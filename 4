package main

import (
	"fmt"
)

func findMedianSortedArrays(nums1 []int, nums2 []int) float64 {
	size := len(nums1) + len(nums2)
	if size%2 == 1 {
		// 一个中位数
		i1, i2 := 0, 0
		n1, n2 := 0, 0
		a := 0
		for i := 0; i <= size/2; i++ {
			if i1 < len(nums1) {
				n1 = nums1[i1]
			} else {
				n1 = 100000
			}
			if i2 < len(nums2) {
				n2 = nums2[i2]
			} else {
				n2 = 100000
			}

			if n1 < n2 {
				i1++
			} else {
				i2++
			}
			a = min(n1, n2)
		}
		return float64(a)
	} else {
		// 两个中位数
		var a = [2]int{0, 0}
		i1, i2 := 0, 0
		n1, n2 := 0, 0
		for i := 0; i <= size/2; i++ {
			if i1 < len(nums1) {
				n1 = nums1[i1]
			} else {
				n1 = 1000000
			}
			if i2 < len(nums2) {
				n2 = nums2[i2]
			} else {
				n2 = 1000000
			}

			if n1 < n2 {
				i1++
			} else {
				i2++
			}
			if i == (size/2)-1 {
				a[0] = min(n1, n2)
			} else if i == size>>1 {
				a[1] = min(n1, n2)
			}
		}
		return float64(float64(a[0]+a[1]) / 2)
	}
}

func min(a, b int) int {
	if a < b {
		return a
	}
	return b
}

func main() {
	nums1 := []int{1, 3}
	nums2 := []int{2}
	fmt.Println(findMedianSortedArrays(nums1, nums2))
}
